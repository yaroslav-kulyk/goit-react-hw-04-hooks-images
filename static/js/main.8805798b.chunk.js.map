{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","services/pixabay-api.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","modalRoot","document","querySelector","Modal","url","showModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","src","alt","ImageGalleryItem","webformatURL","tags","fetchImages","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","then","response","ok","json","Promise","reject","Error","hits","Status","loaderRoot","ImageGallery","onImageClick","showButton","newSearch","images","setImages","status","setStatus","length","info","prev","catch","message","theme","useLayoutEffect","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","map","index","largeImageURL","getLargeImgURL","Button","App","searchQuery","setSearchQuery","setPage","setShowButton","setShowModal","modalURL","setModalURL","isSearch","setIsSearch","autoClose","state","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8805798b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport './Searchbar.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Enter the search query');\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ url, showModal }) {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        showModal(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [showModal]);\n\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      showModal(false);\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">\n        <img src={url} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  showModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ webformatURL, tags, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","const API_KEY = '22978515-5cb8795ed8e9eafc86c022855';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(query, page) {\n  const searchParams = new URLSearchParams({\n    q: query,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12,\n    page,\n  });\n\n  const url = `${BASE_URL}?${searchParams}`;\n\n  return fetch(url)\n    .then(response =>\n      response.ok\n        ? response.json()\n        : Promise.reject(\n            new Error(`Something went wrong, please try again later`),\n          ),\n    )\n    .then(({ hits }) => hits);\n}\n\nexport default fetchImages;\n","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Loader from 'react-loader-spinner';\nimport fetchImages from '../../services/pixabay-api';\nimport './ImageGallery.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nexport default function ImageGallery({\n  query,\n  page,\n  onImageClick,\n  showButton,\n  newSearch,\n}) {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    if (newSearch) {\n      setImages([]);\n      showButton(false);\n    }\n\n    setStatus(Status.PENDING);\n\n    fetchImages(query, page)\n      .then(images => {\n        if (!images.length) {\n          toast.info('No images found :(');\n          setImages(images);\n          setStatus(Status.IDLE);\n          return;\n        }\n\n        setImages(prev => [...prev, ...images]);\n        setStatus(Status.RESOLVED);\n        showButton(true);\n      })\n      .catch(error => {\n        toast.error(`${error.message}`, {\n          theme: 'colored',\n        });\n\n        setStatus(Status.REJECTED);\n      });\n  }, [newSearch, page, query, showButton]);\n\n  useLayoutEffect(() => {\n    if (newSearch) {\n      return;\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  });\n\n  const getLargeImgURL = index => {\n    onImageClick(images[index].largeImageURL);\n  };\n\n  return (\n    <div>\n      {status === Status.PENDING &&\n        createPortal(\n          <div className=\"loader\">\n            <Loader type=\"Grid\" color=\"#3f51b5\" height={100} width={100} />\n          </div>,\n          loaderRoot,\n        )}\n\n      <ul className=\"ImageGallery\">\n        {images &&\n          images.map(({ webformatURL, tags }, index) => {\n            return (\n              <div key={index}>\n                <ImageGalleryItem\n                  webformatURL={webformatURL}\n                  tags={tags}\n                  onClick={() => getLargeImgURL(index)}\n                />\n              </div>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n  showButton: PropTypes.func.isRequired,\n  newSearch: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ onClick }) {\n  return (\n    <div className=\"ButtonContainer\">\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [showButton, setShowButton] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalURL, setModalURL] = useState('');\n  const [isSearch, setIsSearch] = useState(false);\n\n  const onSearch = searchQuery => {\n    setSearchQuery(searchQuery);\n    setPage(1);\n    setIsSearch(true);\n  };\n\n  const onLoadMore = () => {\n    setPage(state => state + 1);\n    setIsSearch(false);\n  };\n\n  const showModalFunc = url => {\n    setShowModal(true);\n    setModalURL(url);\n  };\n\n  return (\n    <div>\n      <ToastContainer autoClose={2500} />\n      {showModal && <Modal url={modalURL} showModal={setShowModal} />}\n      <Searchbar onSubmit={onSearch} />\n      <ImageGallery\n        query={searchQuery}\n        page={page}\n        onImageClick={showModalFunc}\n        showButton={setShowButton}\n        newSearch={isSearch}\n      />\n      {showButton && <Button onClick={onLoadMore} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}